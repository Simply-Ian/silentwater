/*!
    \file Controller.h
    \brief Заголовочный файл, определяющий класс Controller и псевдоним типа page_t

    \typedef page_t
        \ingroup alias
        \brief Псевдоним для представления сверстанной страницы текста как вектора с объектами класса SWText
        \todo Для экономии оперативной памяти планируется переход от хранения SWText к легковесным структурам, 
        и созданию SWText только непосредственно при рендере текста.
    
    \class Controller Controller.h
    \brief Класс, управляющий выполнением приложения. 
    \details С вызова его методов load_book() и loop() начинается работа Silent Water. Хранит Model и View как 
    закрытые поля. Также содержит матрицу слов, вектор сверстанных страниц и данные о внешнем виде текста
    
    \var page_t Controller::word_matrix
    Вектор, хранящий слова с проставленными стилями
    
    \var vector <page_t> Controller::pages
    Вектор типа page_t, хранящий сверстанные страницы
    
    \var Controller::bookFont
    Шрифт, используемый при рендеринге текста книги
    
    \var Controller::pageNumberText;
    Текстовая метка, обозначающая номер текущей страницы. Хранится и рендерится отдельно от слов книги. 
    
    \var Controller::textColor
    Цвет слов текста по умолчанию 
    
    \var Controller::cur_page_num
    Номер текущей страницы 
    
    \var Controller::bookFontSize
    Размер шрифта в книге по умолчанию. Учитывает коэффициент разрешения view.SCALE 

    \var Controller::lineInt
    Межстрочный интервал 

    \fn Controller::create_word_matrix()
    \brief Создает массив SWText с проставленными стилями и навешенными коллбэками на основе model.fragments 

    \fn Controller::build_up_pages()
    \brief Функция для верстки страниц книги
    \details Осуществляет верстку страниц, назначая позиции элементам SWText. Копирует элементы из word_matrix, назначает позиции, 
    упаковывает в #page_t и добавляет сверстанную страницу в pages

    \fn Controller::set_page_num(int new_num)
        \brief Предназначена для перехода на произвольную страницу документа
        \param new_num Номер страницы, на которую нужно перейти
        \todo После перехода к хранению легковесных структур в pages эта функция должна стирать предыдущую отрисованную страницу
        и запускать рендеринг текущей страницы

    \fn Controller::turn_page_back()
        \brief Функция для перехода на предыдущую страницу книги.
        \details Используется как коллбэк для view.leftButton 

    \fn Controller::turn_page_fw()
        \brief Функция для перехода на следущую страницу книги.
        \details Используется как коллбэк для view.leftButton 

    \fn Controller::draw_page()
        \brief Функция для рендера текущей страницы на текстуру View.page
        \note Собственно отрисовкой на экран занимается метод View.update()

    \fn Controller::load_book(char* path);
        \brief Позволяет загрузить fb2-документ по переданному пути.
        \param path Путь до fb2-документа
        \warning Не проверяет валидность пути, если файл не существует, приложение аварийно завершит работу.
        \todo Добавить обработку ошибок 

    \fn Controller::loop();
        \brief Функция запускает главный GUI-цикл приложения
    

*/